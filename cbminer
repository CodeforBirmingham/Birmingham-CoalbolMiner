#!/usr/bin/env python

'''
The MIT License (MIT)

Copyright (c) 2015 @ CodeForBirmingham (http://codeforbirmingham.org)
@Author: Marcus Dillavou <marcus.dillavou@codeforbirmingham.org>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
'''

'''
This is a test script for converting some example
data and storing it into a sqlite3 database
'''
import sys
import argparse

import src.cbminer as cbminer

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('schema', metavar = 'schema',
                        nargs = 1, help = 'The schema CSV file')
    parser.add_argument('-t', '--table', metavar = 'tablename tablecsv',
                        nargs = 2, action = "append",
                        help = 'The table name and the csv file')
    

    args = parser.parse_args()
    
    cbminer.ConfigManager.get_instance().load()
    
    # Create a default database
    db = cbminer.Database()

    # Build our importer
    i = cbminer.Importer(db, args.schema[0])

    success_count = 0
    
    for table, csv in args.table:
        # Find the employee table
        T = i.tables.get(table, None)
        if T:
            # Import the employee payroll table
            try:
                i.parse_table_data(T, csv)
                success_count += 1
            except Exception, e:
                print >> sys.stderr, '== Error importing table %s: %s ==' % (table, e)
        else:
            print >> sys.stderr, '== Error: Invalid table %s ==' % table

    print ''
    if success_count == len(args.table):
        print 'Successfully imported data.'
    elif success_count > 0:
        print 'Successfully imported SOME of the data.'
    else:
        print 'Failed to import any data.'
            
    cbminer.ConfigManager.get_instance().save()
